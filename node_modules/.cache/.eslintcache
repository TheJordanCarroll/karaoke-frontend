[{"/Users/CarrollJ/Desktop/karaoke-frontend/src/index.js":"1","/Users/CarrollJ/Desktop/karaoke-frontend/src/components/App.js":"2","/Users/CarrollJ/Desktop/karaoke-frontend/src/components/Header.js":"3","/Users/CarrollJ/Desktop/karaoke-frontend/src/components/Home.js":"4","/Users/CarrollJ/Desktop/karaoke-frontend/src/components/FavoriteSongs.js":"5","/Users/CarrollJ/Desktop/karaoke-frontend/src/components/FindKaraoke.js":"6","/Users/CarrollJ/Desktop/karaoke-frontend/src/components/Practice.js":"7","/Users/CarrollJ/Desktop/karaoke-frontend/src/components/Footer.js":"8","/Users/CarrollJ/Desktop/karaoke-frontend/src/components/Login.js":"9","/Users/CarrollJ/Desktop/karaoke-frontend/src/components/Record.js":"10","/Users/CarrollJ/Desktop/karaoke-frontend/src/components/SongPage.js":"11","/Users/CarrollJ/Desktop/karaoke-frontend/src/components/SongCard.js":"12","/Users/CarrollJ/Desktop/karaoke-frontend/src/components/FavoriteSongCard.js":"13"},{"size":505,"mtime":1616390514401,"results":"14","hashOfConfig":"15"},{"size":2360,"mtime":1616560200737,"results":"16","hashOfConfig":"15"},{"size":2205,"mtime":1616424298386,"results":"17","hashOfConfig":"15"},{"size":5273,"mtime":1616560858445,"results":"18","hashOfConfig":"15"},{"size":1435,"mtime":1616540829110,"results":"19","hashOfConfig":"15"},{"size":141,"mtime":1616391305854,"results":"20","hashOfConfig":"15"},{"size":131,"mtime":1616391245026,"results":"21","hashOfConfig":"15"},{"size":1568,"mtime":1616424315568,"results":"22","hashOfConfig":"15"},{"size":122,"mtime":1616391231461,"results":"23","hashOfConfig":"15"},{"size":125,"mtime":1616391253603,"results":"24","hashOfConfig":"15"},{"size":1652,"mtime":1616609265156,"results":"25","hashOfConfig":"15"},{"size":3394,"mtime":1616604030725,"results":"26","hashOfConfig":"15"},{"size":4681,"mtime":1616546337637,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"r3nmvl",{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"30"},"/Users/CarrollJ/Desktop/karaoke-frontend/src/index.js",[],["60","61"],"/Users/CarrollJ/Desktop/karaoke-frontend/src/components/App.js",["62"],"import React, { useEffect, useState } from \"react\";\nimport { Switch, Route, Link } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport FavoriteSongs from \"./FavoriteSongs\";\nimport Record from \"./Record\";\nimport FindKaraoke from \"./FindKaraoke\";\nimport Practice from \"./Practice\";\nimport Login from \"./Login\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport SongPage from \"./SongPage\"\n\nfunction App({ song }) {\n  const [songs, setSongs] = useState([]);\n  const [favSongs, setFavSongs] = useState([]);\n  // const USER_ID = 1\n  // const userFavs = favs.filter(f => {\n  //   return f.user_id === USER_ID\n  // })\n\n  useEffect(() => {\n    fetch(\"http://localhost:3000/songs\")\n      .then((r) => r.json())\n      .then((songs) => {\n        setSongs(songs);\n      });\n  }, []);\n\n  useEffect(() => {\n    fetch(\"http://localhost:3000/favorite_songs\")\n      .then((r) => r.json())\n      .then((favSongs) => {\n        setFavSongs(favSongs);\n      });\n  }, []);\n\n  function handleUpdateFav(updatedFav) {\n    const updatedFavsArray = favSongs.map((fav) => {\n      if(fav.id === updatedFav.id) {\n        return updatedFav;\n      } else {\n        return fav;\n      }\n    });\n      setFavSongs(updatedFavsArray);\n  }\n  // const addFav = (user_id, song_id) => {\n  //   const newFav = {\n  //     user_id, song_id, note: \"\"\n  //   }\n  //   let updatedFavs = [...favs, newFav]\n  //   setFavs(updatedFavs)\n  // }\n\n  return (\n    <div className=\"app\">\n      <Header />\n      <Switch>\n        <Route exact path=\"/home\">\n          {/* <Home addFav={addFav} userFavs={userFavs} userId={USER_ID} songs={songs}/> */}\n          <Home fav_songs={favSongs} set_fav_songs={setFavSongs} songs={songs}/>\n        </Route>\n        <Route exact path=\"/favorite_songs\">\n          <FavoriteSongs onUpdateFav={handleUpdateFav} fav_songs={favSongs} setFavSongs={setFavSongs} />\n        </Route>\n        <Route exact path=\"/record\">\n          <Record />\n        </Route>\n        <Route exact path=\"/find_karaoke\">\n          <FindKaraoke />\n        </Route>\n        <Route exact path=\"/practice\">\n          <Practice />\n        </Route>\n        <Route exact path=\"/login\">\n          <Login />\n        </Route>\n        <Route exact path=\"/songs/:id\">\n          <SongPage song={song}/>\n        </Route>\n      </Switch>\n      <Footer />\n    </div>\n  );\n}\n  \n  export default App;","/Users/CarrollJ/Desktop/karaoke-frontend/src/components/Header.js",["63","64","65","66","67","68"],"import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nfunction Header() {\n  return (\n    <nav className=\"navbar navbar-expand-md navbar-light bg-light sticky-top\">\n      <div className=\"container-fluid\">\n      {/* <img\n            src=\"https://i.ibb.co/z5g62xh/Screen-Shot-2021-03-11-at-9-17-50-AM.png\"\n            alt=\"logooooo\"\n            width=\"auto\"\n            height=\"100rem\"\n            classname=\"logologo\"\n            border-radius= \"5px;\"\n          /> */}\n        {/* <a href=\"\" className=\"navbar-brand\" href=\"#\">\n          <img src=\"https://i.ibb.co/z5g62xh/Screen-Shot-2021-03-11-at-9-17-50-AM.png\" alt=\"logo\" width=\"auto\"\n            height=\"60rem\" />\n        </a> */}\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-toggle=\"collapse\"\n          data-target=\"#navbarResponsive\"\n        >\n          <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarResponsive\">\n          <ul className=\"navbar-nav ml-auto\">\n            <li className=\"nav-item active\">\n              <a className=\"nav-link\" href=\"#\">\n                <Link to=\"/home\">Home</Link>\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"#\">\n                <Link to=\"/favorite_songs\">Favorite Songs</Link>\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"#\">\n                <Link to=\"/record\">Record</Link>\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"#\">\n                <Link to=\"/find_karaoke\">Find Karaoke</Link>\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"#\">\n                <Link to=\"/practice\">Practice</Link>\n              </a>\n            </li>\n            <li className=\"nav-item\">\n              <a className=\"nav-link\" href=\"#\">\n                <Link to=\"/login\">Log Out</Link>\n              </a>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Header;","/Users/CarrollJ/Desktop/karaoke-frontend/src/components/Home.js",["69","70"],"import React, { useState, Link } from \"react\";\nimport SongCard from \"./SongCard.js\";\n\nfunction Home({ songs, fav_songs, set_fav_songs, song }) {\n    const [year, setYear] = useState(null);\n    const [tempo, setTempo] = useState(null);\n    const [name, setName] = useState(null);\n    const [artistName, setArtistName] = useState(null);\n    const [lowPitch, setLowPitch] = useState(null);\n    const [highPitch, setHighPitch] = useState(null);\n    const fullRange = [\"A0\", \"A#0\", \"B0\", \"C1\", \"C#1\", \"D1\", \"D#1\", \"E1\", \"F1\", \"F#1\", \"G1\", \"G#1\", \"A1\", \"A#1\", \"B1\", \"C2\", \"C#2\", \"D2\", \"D#2\", \"E2\", \"F2\", \"F#2\", \"G2\", \"G#2\", \"A2\", \"A#2\", \"B2\", \"C3\", \"C#3\", \"D3\", \"D#3\", \"E3\", \"F3\", \"F#3\", \"G3\", \"G#3\", \"A3\", \"A#3\", \"B3\", \"C4\", \"C#4\", \"D4\", \"D#4\", \"E4\", \"F4\", \"F#4\", \"G4\", \"G#4\", \"A4\", \"A#4\", \"B4\", \"C5\", \"C#5\", \"D5\", \"D#5\", \"E5\", \"F5\", \"F#5\", \"G5\", \"G#5\", \"A5\", \"A#5\", \"B5\", \"C6\", \"C#6\", \"D6\", \"D#6\", \"E6\", \"F6\", \"F#6\", \"G6\", \"G#6\", \"A6\", \"A#6\", \"B6\", \"C7\", \"C#7\", \"D7\", \"D#7\", \"E7\", \"F7\", \"F#7\", \"G7\", \"G#7\", \"A7\", \"A#7\", \"B7\", \"C8\"]\n\n    function pitchToNote(pitch){\n      return fullRange[pitch - 1]\n    }\n\n    function noteToPitch(note){\n        if(note.includes('b')){\n            let shiftedNote = note.replace('b', '')\n            return fullRange.indexOf(shiftedNote)\n        } else {\n        return fullRange.indexOf(note) + 1\n        }\n    }\n\n    let songsToDisplay = [...songs]\n    if(year) {\n        songsToDisplay = songsToDisplay.filter(song => {\n            return song.year === year\n        })\n    }\n    if(tempo) {\n      songsToDisplay = songsToDisplay.filter(song => {\n          return song.tempo === tempo\n      })\n  }\n    if(name) {\n        songsToDisplay = songsToDisplay.filter(song => {\n            return song.name.toLowerCase().includes(name.toLowerCase())\n        })\n    }\n    if(artistName) {\n      songsToDisplay = songsToDisplay.filter(song => {\n          return song.artist.name.toLowerCase().includes(artistName.toLowerCase())\n      })\n    }\n    if(lowPitch) {\n      songsToDisplay = songsToDisplay.filter(song => {\n        return song.lowest_pitch >= parseInt(lowPitch)\n    })\n    }\n    if(highPitch) {\n      songsToDisplay = songsToDisplay.filter(song => {\n        return song.highest_pitch <= parseInt(highPitch)\n    })\n    }\n\n  return (\n    <div className=\"container-fluid padding\">\n      <div class=\"jumbotron jumbotron-fluid jumbo\">\n        <p class=\"lead\">Find the perfect song for your needs using these filters:</p>\n        <label for=\"songNameInput\">Song Name:</label>\n        <input class=\"form-control filter\" id=\"songNameInput\" placeholder=\"\" onChange={(e) => {\n            const val=e.target.value\n            setName(val)\n        }}/>\n        <label for=\"artistNameInput\">Artist Name:</label>\n        <input class=\"form-control filter\" id=\"artistNameInput\" placeholder=\"\" onChange={(e) => {\n            const val=e.target.value\n            setArtistName(val)\n        }}/>\n        {/* <div class=\"dropdown\">\n          <button class=\"btn btn-secondary dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\n            Year\n          </button>\n          <div class=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\" onChange={(e) => {\n            const val=e.target.value\n            setYear(parseInt(val))\n          }}>\n            <a class=\"dropdown-item\" href=\"#\" value=\"2020\">2020</a>\n            <a class=\"dropdown-item\" href=\"#\" value=\"2019\">2019</a>\n          </div>\n        </div> */}\n        <div>\n        <label for=\"releaseYearSelect\">Release Year:</label>\n        </div>\n        <select class=\"form-control year\" id=\"releaseYearSelect\" aria-label=\"Default select example\" onChange={(e) => {\n            const val=e.target.value\n            setYear(parseInt(val))\n        }}>\n            <option selected value=\"\">All</option>\n            <option value=\"2020\">2020</option>\n            <option value=\"2019\">2019</option>\n            <option value=\"2018\">2018</option>\n            <option value=\"2017\">2017</option>\n            <option value=\"2016\">2016</option>\n        </select>\n        <div>\n        <label for=\"tempoSelect\">Speed:</label>\n        </div>\n        <select class=\"form-control year\" id=\"tempoSelect\" aria-label=\"Default select example\" onChange={(e) => {\n            const val=e.target.value\n            setTempo(val)\n        }}>\n            <option selected value=\"\">All</option>\n            <option value=\"Up\">Fast</option>\n            <option value=\"Mid\">Medium</option>\n            <option value=\"Down\">Slow</option>\n        </select>\n        <div>\n        <label for=\"lowestNoteInput\">My Lowest Note:</label>\n        </div>\n        <input class=\"form-control filter\" id=\"lowestNoteInput\" onChange={(e) => {\n          setLowPitch(noteToPitch(e.target.value))\n        }} />\n        <label for=\"highestNoteInput\">My Highest Note:</label>\n        <input class=\"form-control filter\" id=\"highestNoteInput\" onChange={(e) => {\n          setHighPitch(noteToPitch(e.target.value))\n        }} />\n\n\n      </div>\n      <div className=\"row padding\">\n        {songsToDisplay.map((song) => {\n          return <SongCard key={song.id} song={song} favs={fav_songs} set={set_fav_songs} />;\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","/Users/CarrollJ/Desktop/karaoke-frontend/src/components/FavoriteSongs.js",[],"/Users/CarrollJ/Desktop/karaoke-frontend/src/components/FindKaraoke.js",[],"/Users/CarrollJ/Desktop/karaoke-frontend/src/components/Practice.js",[],"/Users/CarrollJ/Desktop/karaoke-frontend/src/components/Footer.js",[],"/Users/CarrollJ/Desktop/karaoke-frontend/src/components/Login.js",[],"/Users/CarrollJ/Desktop/karaoke-frontend/src/components/Record.js",[],"/Users/CarrollJ/Desktop/karaoke-frontend/src/components/SongPage.js",["71","72","73","74","75","76"],"/Users/CarrollJ/Desktop/karaoke-frontend/src/components/SongCard.js",["77","78","79","80","81","82"],"import React, { useState, useEffect} from \"react\";\nimport { Switch, Route, Link, BrowserRouter as Router, useParams  } from \"react-router-dom\";\n\n// function SongCard({ song, isFav, addFav }) {\nfunction SongCard({ song, favs, set }) {\n    const { id } = song;\n\n    // const{song_id} = song\n    const [isFavorited, setIsFavorited] = useState(false);\n    const current_user_id = 1;\n    // const createFavorite = () => {\n    //     const newFav = {\n    //         user_id: 1, song_id, note: \"\"\n    //     }\n    //     fetch(\"http://localhost:3000/favorite_songs\", {\n    //   method: \"POST\",\n    //   headers: {\n    //     \"Content-Type\": \"application/json\",\n    //   },\n    //   body: JSON.stringify(newFav),\n    // })\n    //   .then((r) => r.json())\n    //   .then((data) => {\n    //     console.log(data)\n    //   });\n    // }\n\n    // console.log(\"this is the individual song\", song)\n\n    function toggleFav(e) {\n        setIsFavorited(!isFavorited);\n        handleSubmit(e);\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        fetch(\"http://localhost:3000/favorite_songs\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ user_id: current_user_id, song_id: id }),\n        })\n            .then((r) => r.json())\n            .then((data) => {\n                const newFav = [...favs, data];\n                set(newFav);\n            });\n        \n    }\n\n    return (\n        <div className=\"col-md-4\">\n            <div className=\"card\">\n                <img\n                    className=\"card-img-top\"\n                    src={song.image}\n                />\n                <div className=\"card-body\">\n                    <h4 class=\"card-title\">\n                        <Link song={song} to={`/songs/${id}`}>{song.name}</Link>\n                    </h4>\n                    <p className=\"card-text\">\n                        Range: {song.lowest_note}-{song.highest_note}\n                    </p>\n                    <p>Artist: {song.artist.name}</p>\n                    <p>Song: {song.genre.name}</p>\n                </div>\n                {/* <div\n                        // href=\"#\"\n                        className=\"btn btn-outline-secondary\"\n                        onClick={() => {\n                            setIsFavorited(!isFavorited)\n                            createFavorite()\n                        }}\n                        // className=\"emoji-button favorite active\"\n                    >\n                        {isFavorited ? \"★\" : \"☆\"}\n                </div> */}\n                {isFavorited ? (\n                    <button\n                        // href=\"#\"\n                        className=\"btn btn-outline-secondary\"\n                        onClick={toggleFav}\n                        // className=\"emoji-button favorite active\"\n                    >\n                        ★\n                    </button>\n                    ) : (\n                    <button\n                        // href=\"#\"\n                        className=\"btn btn-outline-secondary\"\n                        onClick={toggleFav}\n                        // className=\"emoji-button favorite\"\n                    >\n                        ☆\n                    </button>\n                    )}\n            </div>\n        </div>\n    );\n  }\n  \n  export default SongCard;","/Users/CarrollJ/Desktop/karaoke-frontend/src/components/FavoriteSongCard.js",["83","84","85","86"],"import React, { useState, useEffect } from \"react\";\n\nfunction FavoriteSongCard({ fav, onDeleteFavorite, setFavSongs, fav_songs, onUpdateFav }) {\n    const { id, user_id, song_id, note } = fav;\n\n    const [updatedNote, setUpdatedNote] = useState(note);\n\n    function handleDelete() {\n        const requestOptions = {\n            method: \"DELETE\",\n        };\n        fetch(`http://localhost:3000/favorite_songs/${id}`, requestOptions);\n        setFavSongs(fav_songs.filter((fav) => fav.id !== id));\n    }\n\n    function handleNoteFormSubmit(e) {\n        e.preventDefault();\n        fetch(`http://localhost:3000/favorite_songs/${id}`, {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ note: updatedNote })\n        })\n            .then((r) => r.json())\n            .then((updatedFav) => {\n                onUpdateFav(updatedFav);\n            });\n    }\n\n    function handleDeleteNote(e) {\n        e.preventDefault();\n        fetch(`http://localhost:3000/favorite_songs/${id}`, {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ note: null })\n        })\n            .then((r) => r.json())\n            .then((updatedFav) => {\n                onUpdateFav(updatedFav);\n            });\n    }\n    function noNote() {\n        return (\n            <form onSubmit={handleNoteFormSubmit}>\n                <textarea\n                    class=\"form-control\"\n                    type=\"text\"\n                    placeholder=\"Add a note...\"\n                    value={updatedNote}\n                    onChange={(e) => setUpdatedNote(e.target.value)}\n                />\n                <div>\n                <button type=\"submit\" className=\"btn btn-outline-secondary\">Add</button>\n                </div>\n            </form>\n        );\n    }\n\n    function existingNote() {\n        return (\n            <form onSubmit={handleNoteFormSubmit}>\n                <p className=\"card-text\">\n                        Notes: {note}\n                </p>\n                <textarea\n                    class=\"form-control\"\n                    type=\"text\"\n                    placeholder=\"Update your note...\"\n                    value={updatedNote}\n                    onChange={(e) => setUpdatedNote(e.target.value)}\n                />\n                <div>\n                <button type=\"submit\" className=\"btn btn-outline-secondary\">Update</button>\n                <button type=\"submit\" onClick={handleDeleteNote} className=\"btn btn-outline-secondary\">Delete Note</button>\n                </div>\n            </form>\n        );\n    }\n    //     {\n    //         method: \"DELETE\",\n    //     })\n    //         .then((r) => r.json())\n    //         .then(() => {\n    //             onDeleteFavorite(id);\n    //         });\n    // }\n    let noteSection;\n    if (note == null) {\n        noteSection = noNote();\n    } else {\n        noteSection = existingNote();\n    }\n\n    return (\n        <div className=\"col-md-4\">\n            <div className=\"card\">\n                <img\n                    className=\"card-img-top\"\n                    src={fav.song.image}\n                />\n                <div className=\"card-body\">\n                    <h4 className=\"card-title\">{fav.song.name}</h4>\n                    {/* <h4 className=\"card-title\">{fav.id}</h4> */}\n                    <p className=\"card-text\">\n                        Range: {fav.song.lowest_note}-{fav.song.highest_note}\n                    </p>\n                    {/* <p className=\"card-text\">\n                        Notes: {note}\n                    </p> */}\n                    {/* <form onSubmit={handleNoteFormSubmit}>\n                        <input\n                            type=\"text\"\n                            placeholder=\"Add or Update note...\"\n                            value={updatedNote}\n                            onChange={(e) => setUpdatedNote(e.target.value)}\n                        />\n                        <div>\n                        <button type=\"submit\" className=\"btn btn-outline-secondary\">Add a Note</button>\n                        <button type=\"submit\" onClick={handleDeleteNote} className=\"btn btn-outline-secondary\">Delete Note</button>\n                        </div>\n                    </form> */}\n                    {noteSection}\n                    <button onClick={handleDelete} className=\"btn btn-outline-secondary\">\n                        Delete Favorite Song\n                    </button>  \n                </div>\n            </div>\n        </div>\n    );\n  }\n  \n  export default FavoriteSongCard;",{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":2,"column":25,"nodeType":"93","messageId":"94","endLine":2,"endColumn":29},{"ruleId":"95","severity":1,"message":"96","line":31,"column":15,"nodeType":"97","endLine":31,"endColumn":48},{"ruleId":"95","severity":1,"message":"96","line":36,"column":15,"nodeType":"97","endLine":36,"endColumn":48},{"ruleId":"95","severity":1,"message":"96","line":41,"column":15,"nodeType":"97","endLine":41,"endColumn":48},{"ruleId":"95","severity":1,"message":"96","line":46,"column":15,"nodeType":"97","endLine":46,"endColumn":48},{"ruleId":"95","severity":1,"message":"96","line":51,"column":15,"nodeType":"97","endLine":51,"endColumn":48},{"ruleId":"95","severity":1,"message":"96","line":56,"column":15,"nodeType":"97","endLine":56,"endColumn":48},{"ruleId":"91","severity":1,"message":"92","line":1,"column":27,"nodeType":"93","messageId":"94","endLine":1,"endColumn":31},{"ruleId":"91","severity":1,"message":"98","line":13,"column":14,"nodeType":"93","messageId":"94","endLine":13,"endColumn":25},{"ruleId":"91","severity":1,"message":"99","line":3,"column":22,"nodeType":"93","messageId":"94","endLine":3,"endColumn":28},{"ruleId":"91","severity":1,"message":"100","line":4,"column":5,"nodeType":"93","messageId":"94","endLine":4,"endColumn":11},{"ruleId":"91","severity":1,"message":"101","line":5,"column":5,"nodeType":"93","messageId":"94","endLine":5,"endColumn":10},{"ruleId":"91","severity":1,"message":"92","line":6,"column":5,"nodeType":"93","messageId":"94","endLine":6,"endColumn":9},{"ruleId":"102","severity":1,"message":"103","line":18,"column":8,"nodeType":"104","endLine":18,"endColumn":10,"suggestions":"105"},{"ruleId":"106","severity":1,"message":"107","line":31,"column":25,"nodeType":"97","endLine":31,"endColumn":88},{"ruleId":"91","severity":1,"message":"108","line":1,"column":27,"nodeType":"93","messageId":"94","endLine":1,"endColumn":36},{"ruleId":"91","severity":1,"message":"100","line":2,"column":10,"nodeType":"93","messageId":"94","endLine":2,"endColumn":16},{"ruleId":"91","severity":1,"message":"101","line":2,"column":18,"nodeType":"93","messageId":"94","endLine":2,"endColumn":23},{"ruleId":"91","severity":1,"message":"99","line":2,"column":48,"nodeType":"93","messageId":"94","endLine":2,"endColumn":54},{"ruleId":"91","severity":1,"message":"109","line":2,"column":56,"nodeType":"93","messageId":"94","endLine":2,"endColumn":65},{"ruleId":"106","severity":1,"message":"107","line":55,"column":17,"nodeType":"97","endLine":58,"endColumn":19},{"ruleId":"91","severity":1,"message":"108","line":1,"column":27,"nodeType":"93","messageId":"94","endLine":1,"endColumn":36},{"ruleId":"91","severity":1,"message":"110","line":4,"column":17,"nodeType":"93","messageId":"94","endLine":4,"endColumn":24},{"ruleId":"91","severity":1,"message":"111","line":4,"column":26,"nodeType":"93","messageId":"94","endLine":4,"endColumn":33},{"ruleId":"106","severity":1,"message":"107","line":100,"column":17,"nodeType":"97","endLine":103,"endColumn":19},"no-native-reassign",["112"],"no-negated-in-lhs",["113"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'pitchToNote' is defined but never used.","'Router' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["114"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useEffect' is defined but never used.","'useParams' is defined but never used.","'user_id' is assigned a value but never used.","'song_id' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"115","fix":"116"},"Update the dependencies array to be: [id]",{"range":"117","text":"118"},[460,462],"[id]"]