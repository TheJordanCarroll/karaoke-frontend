{"ast":null,"code":"var _jsxFileName = \"/Users/CarrollJ/Desktop/karaoke-frontend/src/components/SongPage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SongPage({\n  song,\n  individualSong\n}) {\n  // const { id } = useParams();\n  // const [individualSong, setIndividualSong] = useState([]);\n  // useEffect(() => {\n  //     fetch(`http://localhost:3000/songs/${id}`)\n  //         .then((r) => r.json())\n  //         .then((song) => setIndividualSong(song));\n  // }, []);\n  console.log(\"this is individual song\", individualSong); // console.log(\"this is song\", song)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid padding\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row padding\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-6\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Song Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_c = SongPage;\nexport default SongPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SongPage\");","map":{"version":3,"sources":["/Users/CarrollJ/Desktop/karaoke-frontend/src/components/SongPage.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Switch","Route","Link","useParams","SongPage","song","individualSong","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SACIC,aAAa,IAAIC,MADrB,EAEIC,MAFJ,EAGIC,KAHJ,EAIIC,IAJJ,EAKIC,SALJ,QAMO,kBANP;;;AAQA,SAASC,QAAT,CAAkB;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAAlB,EAA4C;AACxC;AACA;AAEA;AACA;AACA;AACA;AACA;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCF,cAAvC,EAVwC,CAWxC;;AAGA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,iCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBD;;KAlCMF,Q;AAoCP,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    useParams,\n} from \"react-router-dom\";\n\nfunction SongPage({ song, individualSong }) {\n    // const { id } = useParams();\n    // const [individualSong, setIndividualSong] = useState([]);\n\n    // useEffect(() => {\n    //     fetch(`http://localhost:3000/songs/${id}`)\n    //         .then((r) => r.json())\n    //         .then((song) => setIndividualSong(song));\n    // }, []);\n\n    console.log(\"this is individual song\", individualSong)\n    // console.log(\"this is song\", song)\n\n\n    return (\n        <div>\n            <div className=\"container-fluid padding\">\n                <div className=\"row padding\">\n                    <div className=\"col-lg-6\">\n                        <h2>Song Information</h2>\n                        {/* <img src={individualSong.image} className=\"img-fluid\" />\n                        <p>Song Name: {individualSong.name}</p> */}\n                        {/* <p>Artist: {song.artist.name}</p> */}\n                        {/* <p>Artist Gender: {individualSong.artist_gender}</p>\n                        <p>Range: {individualSong.lowest_note}-{individualSong.highest_note}</p> */}\n                        {/* <p>Genre: {individualSong.genre.name}</p> */}\n                        {/* <p>Release Year: {individualSong.year}</p>\n                        <p>Tempo: {individualSong.tempo}tempo</p>\n                        <p>Key: {individualSong.key}</p> */}\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n  }\n  \n  export default SongPage;"]},"metadata":{},"sourceType":"module"}