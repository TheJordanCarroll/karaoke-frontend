{"ast":null,"code":"var _jsxFileName = \"/Users/CarrollJ/Desktop/karaoke-frontend/src/components/SongCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Switch, Route, Link, BrowserRouter as Router, useParams } from \"react-router-dom\"; // function SongCard({ song, isFav, addFav }) {\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SongCard({\n  song,\n  favs,\n  set\n}) {\n  _s();\n\n  // const { id } = song;\n  const {\n    id\n  } = useParams();\n  const [individualSong, setIndividualSong] = useState([]); // const{song_id} = song\n\n  const [isFavorited, setIsFavorited] = useState(false);\n  const current_user_id = 1; // const createFavorite = () => {\n  //     const newFav = {\n  //         user_id: 1, song_id, note: \"\"\n  //     }\n  //     fetch(\"http://localhost:3000/favorite_songs\", {\n  //   method: \"POST\",\n  //   headers: {\n  //     \"Content-Type\": \"application/json\",\n  //   },\n  //   body: JSON.stringify(newFav),\n  // })\n  //   .then((r) => r.json())\n  //   .then((data) => {\n  //     console.log(data)\n  //   });\n  // }\n\n  console.log(\"this is the individual song\", song);\n\n  function toggleFav(e) {\n    setIsFavorited(!isFavorited);\n    handleSubmit(e);\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    fetch(\"http://localhost:3000/favorite_songs\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        user_id: current_user_id,\n        song_id: song.id\n      })\n    }).then(r => r.json()).then(data => {\n      const newFav = [...favs, data];\n      set(newFav);\n    });\n  }\n\n  useEffect(() => {\n    fetch(`http://localhost:3000/songs/${id}`).then(r => r.json()).then(song => setIndividualSong(song));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-md-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"card-img-top\",\n        src: song.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          class: \"card-title\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            individualSong: individualSong,\n            song: song,\n            to: `/songs/${song.id}`,\n            children: song.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: [\"Range: \", song.lowest_note, \"-\", song.highest_note]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), isFavorited ? /*#__PURE__*/_jsxDEV(\"button\", {\n        // href=\"#\"\n        className: \"btn btn-outline-secondary\",\n        onClick: toggleFav // className=\"emoji-button favorite active\"\n        ,\n        children: \"\\u2605\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        // href=\"#\"\n        className: \"btn btn-outline-secondary\",\n        onClick: toggleFav // className=\"emoji-button favorite\"\n        ,\n        children: \"\\u2606\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SongCard, \"wd4IXsjFPXe8mofDDRqTxPqm2qU=\", false, function () {\n  return [useParams];\n});\n\n_c = SongCard;\nexport default SongCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"SongCard\");","map":{"version":3,"sources":["/Users/CarrollJ/Desktop/karaoke-frontend/src/components/SongCard.js"],"names":["React","useState","useEffect","Switch","Route","Link","BrowserRouter","Router","useParams","SongCard","song","favs","set","id","individualSong","setIndividualSong","isFavorited","setIsFavorited","current_user_id","console","log","toggleFav","e","handleSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","user_id","song_id","then","r","json","data","newFav","image","name","lowest_note","highest_note"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from \"react\";\nimport { Switch, Route, Link, BrowserRouter as Router, useParams  } from \"react-router-dom\";\n\n// function SongCard({ song, isFav, addFav }) {\nfunction SongCard({ song, favs, set }) {\n    // const { id } = song;\n    const { id } = useParams();\n    const [individualSong, setIndividualSong] = useState([]);\n\n    // const{song_id} = song\n    const [isFavorited, setIsFavorited] = useState(false);\n    const current_user_id = 1;\n    // const createFavorite = () => {\n    //     const newFav = {\n    //         user_id: 1, song_id, note: \"\"\n    //     }\n    //     fetch(\"http://localhost:3000/favorite_songs\", {\n    //   method: \"POST\",\n    //   headers: {\n    //     \"Content-Type\": \"application/json\",\n    //   },\n    //   body: JSON.stringify(newFav),\n    // })\n    //   .then((r) => r.json())\n    //   .then((data) => {\n    //     console.log(data)\n    //   });\n    // }\n\n    console.log(\"this is the individual song\", song)\n\n    function toggleFav(e) {\n        setIsFavorited(!isFavorited);\n        handleSubmit(e);\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        fetch(\"http://localhost:3000/favorite_songs\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ user_id: current_user_id, song_id: song.id }),\n        })\n            .then((r) => r.json())\n            .then((data) => {\n                const newFav = [...favs, data];\n                set(newFav);\n            });\n        \n    }\n\n    useEffect(() => {\n        fetch(`http://localhost:3000/songs/${id}`)\n            .then((r) => r.json())\n            .then((song) => setIndividualSong(song));\n    }, []);\n\n    return (\n        <div className=\"col-md-4\">\n            <div className=\"card\">\n                <img\n                    className=\"card-img-top\"\n                    src={song.image}\n                />\n                <div className=\"card-body\">\n                    <h4 class=\"card-title\">\n                        <Link individualSong={individualSong} song={song} to={`/songs/${song.id}`}>{song.name}</Link>\n                    </h4>\n                    <p className=\"card-text\">\n                        Range: {song.lowest_note}-{song.highest_note}\n                    </p>   \n                </div>\n                {/* <div\n                        // href=\"#\"\n                        className=\"btn btn-outline-secondary\"\n                        onClick={() => {\n                            setIsFavorited(!isFavorited)\n                            createFavorite()\n                        }}\n                        // className=\"emoji-button favorite active\"\n                    >\n                        {isFavorited ? \"★\" : \"☆\"}\n                </div> */}\n                {isFavorited ? (\n                    <button\n                        // href=\"#\"\n                        className=\"btn btn-outline-secondary\"\n                        onClick={toggleFav}\n                        // className=\"emoji-button favorite active\"\n                    >\n                        ★\n                    </button>\n                    ) : (\n                    <button\n                        // href=\"#\"\n                        className=\"btn btn-outline-secondary\"\n                        onClick={toggleFav}\n                        // className=\"emoji-button favorite\"\n                    >\n                        ☆\n                    </button>\n                    )}\n            </div>\n        </div>\n    );\n  }\n  \n  export default SongCard;"]},"metadata":{},"sourceType":"module"}