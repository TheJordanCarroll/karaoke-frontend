{"ast":null,"code":"var _jsxFileName = \"/Users/CarrollJ/Desktop/karaoke-frontend/src/components/FavoriteSongCard.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FavoriteSongCard({\n  fav,\n  onDeleteFavorite,\n  setFavSongs,\n  fav_songs\n}) {\n  const {\n    id,\n    user_id,\n    song_id\n  } = fav;\n\n  function handleDelete() {\n    const requestOptions = {\n      method: \"DELETE\"\n    };\n    fetch(`http://localhost:3000/favorite_songs/${id}`, requestOptions);\n    setFavSongs(fav_songs.filter(fav => fav.id !== id));\n  }\n\n  function handleNoteFormSubmit(e) {\n    e.preventDefault();\n    fetch(`http://localhost:3000/${id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        note: updatedNote\n      })\n    }).then(r => r.json()).then(updatedFav => {\n      onUpdateFav(updatedFav);\n    });\n  } //     {\n  //         method: \"DELETE\",\n  //     })\n  //         .then((r) => r.json())\n  //         .then(() => {\n  //             onDeleteFavorite(id);\n  //         });\n  // }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col-md-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"card-img-top\",\n        src: fav.song.image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"card-title\",\n          children: fav.song.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: [\"Range: \", fav.song.lowest_note, \"-\", fav.song.highest_note]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text\",\n          children: [\"Notes: \", fav.note]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleNoteFormSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Update your note here...\",\n            value: updatedNote,\n            onChange: e => setUpdatedNote(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Update Note\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDelete,\n          className: \"btn btn-outline-secondary\",\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_c = FavoriteSongCard;\nexport default FavoriteSongCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"FavoriteSongCard\");","map":{"version":3,"sources":["/Users/CarrollJ/Desktop/karaoke-frontend/src/components/FavoriteSongCard.js"],"names":["React","useState","useEffect","FavoriteSongCard","fav","onDeleteFavorite","setFavSongs","fav_songs","id","user_id","song_id","handleDelete","requestOptions","method","fetch","filter","handleNoteFormSubmit","e","preventDefault","headers","body","JSON","stringify","note","updatedNote","then","r","json","updatedFav","onUpdateFav","song","image","name","lowest_note","highest_note","setUpdatedNote","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction FavoriteSongCard({ fav, onDeleteFavorite, setFavSongs, fav_songs }) {\n    const { id, user_id, song_id } = fav;\n\n    function handleDelete() {\n        const requestOptions = {\n            method: \"DELETE\",\n        };\n        fetch(`http://localhost:3000/favorite_songs/${id}`, requestOptions);\n        setFavSongs(fav_songs.filter((fav) => fav.id !== id));\n    }\n\n    function handleNoteFormSubmit(e) {\n        e.preventDefault();\n        fetch(`http://localhost:3000/${id}`, {\n            method: \"PATCH\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({ note: updatedNote })\n        })\n            .then((r) => r.json())\n            .then((updatedFav) => {\n                onUpdateFav(updatedFav);\n            });\n    }\n    //     {\n    //         method: \"DELETE\",\n    //     })\n    //         .then((r) => r.json())\n    //         .then(() => {\n    //             onDeleteFavorite(id);\n    //         });\n    // }\n\n    return (\n        <div className=\"col-md-4\">\n            <div className=\"card\">\n                <img\n                    className=\"card-img-top\"\n                    src={fav.song.image}\n                />\n                <div className=\"card-body\">\n                    <h4 className=\"card-title\">{fav.song.name}</h4>\n                    {/* <h4 className=\"card-title\">{fav.id}</h4> */}\n                    <p className=\"card-text\">\n                        Range: {fav.song.lowest_note}-{fav.song.highest_note}\n                    </p>\n                    <p className=\"card-text\">\n                        Notes: {fav.note}\n                    </p>\n                    <form onSubmit={handleNoteFormSubmit}>\n                        <input\n                            type=\"text\"\n                            placeholder=\"Update your note here...\"\n                            value={updatedNote}\n                            onChange={(e) => setUpdatedNote(e.target.value)}\n                        />\n                        <button type=\"submit\">Update Note</button>\n                    </form>\n                    <button onClick={handleDelete} className=\"btn btn-outline-secondary\">\n                        Delete\n                    </button>  \n                </div>\n            </div>\n        </div>\n    );\n  }\n  \n  export default FavoriteSongCard;"]},"metadata":{},"sourceType":"module"}