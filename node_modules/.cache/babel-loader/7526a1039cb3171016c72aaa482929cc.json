{"ast":null,"code":"var _jsxFileName = \"/Users/CarrollJ/Desktop/karaoke-frontend/src/components/SongPage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; // import {\n//     BrowserRouter as Router,\n//     Switch,\n//     Route,\n//     Link,\n//     useParams,\n// } from \"react-router-dom\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SongPage({\n  song\n}) {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [individualSong, setIndividualSong] = useState([]);\n  useEffect(() => {\n    fetch(`http://localhost:3000/songs/${id}`).then(r => r.json()).then(song => setIndividualSong(song));\n  }, []);\n  console.log(\"this is individual song\", individualSong);\n  console.log(\"this is song\", song);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid padding\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row padding\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-lg-6\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Song Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: individualSong.image,\n            className: \"img-fluid\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Song Name: \", individualSong.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Artist Gender: \", individualSong.artist_gender]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Range: \", individualSong.lowest_note, \"-\", individualSong.highest_note]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Release Year: \", individualSong.year]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Tempo: \", individualSong.tempo, \"tempo\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Key: \", individualSong.key]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SongPage, \"dAe2XYa5Bfy97EC2r+1sGzty4Ys=\", true);\n\n_c = SongPage;\nexport default SongPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"SongPage\");","map":{"version":3,"sources":["/Users/CarrollJ/Desktop/karaoke-frontend/src/components/SongPage.js"],"names":["React","useState","useEffect","SongPage","song","id","useParams","individualSong","setIndividualSong","fetch","then","r","json","console","log","image","name","artist_gender","lowest_note","highest_note","year","tempo","key"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AAEA,SAASC,QAAT,CAAkB;AAAEC,EAAAA;AAAF,CAAlB,EAA4B;AAAA;;AACxB,QAAM;AAAEC,IAAAA;AAAF,MAASC,SAAS,EAAxB;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAC,EAAD,CAApD;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,KAAK,CAAE,+BAA8BJ,EAAG,EAAnC,CAAL,CACKK,IADL,CACWC,CAAD,IAAOA,CAAC,CAACC,IAAF,EADjB,EAEKF,IAFL,CAEWN,IAAD,IAAUI,iBAAiB,CAACJ,IAAD,CAFrC;AAGH,GAJQ,EAIN,EAJM,CAAT;AAMAS,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCP,cAAvC;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BV,IAA5B;AAGA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA,6BACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,UAAf;AAAA,kCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAK,YAAA,GAAG,EAAEG,cAAc,CAACQ,KAAzB;AAAgC,YAAA,SAAS,EAAC;AAA1C;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAA,sCAAeR,cAAc,CAACS,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAKI;AAAA,0CAAmBT,cAAc,CAACU,aAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ,eAMI;AAAA,kCAAWV,cAAc,CAACW,WAA1B,OAAwCX,cAAc,CAACY,YAAvD;AAAA;AAAA;AAAA;AAAA;AAAA,kBANJ,eAQI;AAAA,yCAAkBZ,cAAc,CAACa,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA,kBARJ,eASI;AAAA,kCAAWb,cAAc,CAACc,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,kBATJ,eAUI;AAAA,gCAASd,cAAc,CAACe,GAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBD;;GAlCMnB,Q;;KAAAA,Q;AAoCP,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\n// import {\n//     BrowserRouter as Router,\n//     Switch,\n//     Route,\n//     Link,\n//     useParams,\n// } from \"react-router-dom\";\n\nfunction SongPage({ song }) {\n    const { id } = useParams();\n    const [individualSong, setIndividualSong] = useState([]);\n\n    useEffect(() => {\n        fetch(`http://localhost:3000/songs/${id}`)\n            .then((r) => r.json())\n            .then((song) => setIndividualSong(song));\n    }, []);\n\n    console.log(\"this is individual song\", individualSong)\n    console.log(\"this is song\", song)\n\n\n    return (\n        <div>\n            <div className=\"container-fluid padding\">\n                <div className=\"row padding\">\n                    <div className=\"col-lg-6\">\n                        <h2>Song Information</h2>\n                        <img src={individualSong.image} className=\"img-fluid\" />\n                        <p>Song Name: {individualSong.name}</p>\n                        {/* <p>Artist: {song.artist.name}</p> */}\n                        <p>Artist Gender: {individualSong.artist_gender}</p>\n                        <p>Range: {individualSong.lowest_note}-{individualSong.highest_note}</p>\n                        {/* <p>Genre: {individualSong.genre.name}</p> */}\n                        <p>Release Year: {individualSong.year}</p>\n                        <p>Tempo: {individualSong.tempo}tempo</p>\n                        <p>Key: {individualSong.key}</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n  }\n  \n  export default SongPage;"]},"metadata":{},"sourceType":"module"}